实战：迷宫问题(回溯)

递归：简单地说递归就是方法自己调用自己，每次调用自己时传入不同的变量。
小案例：打印问题；阶乘问题
递归用来解决什么样的问题：
    各种数学问题：8皇后问题，汉诺塔，阶乘问题，迷宫问题，球和篮子的问题(google编程大赛)；
    各种算法也会使用递归，比如快排，归并排序，二分查找，分治算法等；
    将用栈解决的问题 -> 递归代码比较简洁
递归需要遵守的重要规则：
    执行一个方法时，就创建一个新的受保护的独立空间(栈空间)；
    方法的局部变量是独立的，不会相互受影响；
    如果方法中使用的时引用数据类型，就会共享该引用类型的数据；
    递归必须向退出递归的条件逼近，否则就是无限递归，死归了；
    当一个方法执行完毕，或者遇到return，就会返回，遵守谁调用返回谁，同时当方法执行完毕或者返回时，该方法也就执行完毕。
自我总结：
    递归适合解决有条件的极限问题，利用计算机计算快的优势，分析每一种可能，然后返回结果。
    比如用一个被细针扎过的袋子盛水，知道漏水想先补好缝隙，但是靠肉眼无法知道缝隙在何处：可以先使用一点水测试袋子，找到缝隙。(水帮助人计算了各个袋子地方，通过漏出袋子完成计算，返回结果)

思路：
    迷宫问题：
    条件：如果递归到最后一格，就返回true结束；
    过程：
        判断当前格子是否走过？
            走过，直接返回false;
            没有走过，设置当前格子为走，判断下一个格子是否可行(递归)；
                行走策略：下右上左，走不动了就返回false证明此路不通。

扩展：八皇后问题(回溯问题)