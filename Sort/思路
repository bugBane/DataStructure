排序算法：十大排序算法

交换排序：
    冒泡排序：两两比较，按照从小到大，前大后小则交换，每次交换完成确定最后一位为最大值，如此重复。
    选择排序：第一个值与其他值比较，按照从小到大，第一个大则交换，每次交换完成确定第一位为最小值，如此重复。
    希尔-交换排序(不使用)：将arr每次分为arr.length/2组，每个组按照冒泡或者选择方式排序，如此重复。
插入排序：
    插入排序：原数组划分为新有序+旧无序，每次拿出旧无序元素进行比较，如果比有序数组最大值小，则插入，如此重复。
    希尔-插入排序：将arr每次分为arr.length/2组，每个组按照插入排序，如此重复。
递归排序：
    快速排序：冒泡排序思路升级版，先确定数组中值，如果比中值大，则在中值后边，否则就在前边，这样就可以确定中值位置，如此重复。
    归并排序：分治算法；分：拆分数组；治：合并数组时按照有序方式添加到新数组，再将新数组复制到原数组。
桶排序：
    基数排序：取元素按照位数比较大小后放入桶中，然后按照桶中顺序再复制到原数组，各个位数如此重复。

常用排序算法总结和对比：
    排序算法    平均时间复杂度     最好情况    最坏情况    空间复杂度   排序方式    稳定性
    冒泡排序    O(n^2)          O(n)       O(n^2)     O(1)       内空间     稳定
    选择排序    O(n^2)          O(n^2)     O(n^2)     O(1)       内空间     不稳定
    插入排序    O(n^2)          O(n)       O(n^2)     O(1)       内空间     稳定
    希尔排序    O(nlogn)        O(nlogn^2) O(nlogn^2) O(1)       内空间     不稳定
    快速排序    O(nlogn)        O(nlogn)   O(n^2)     O(logn)    内空间     不稳定
    归并排序    O(nlogn)        O(nlogn)   O(nlogn)   O(n)       外空间     稳定
    堆排序     O(nlogn)        O(nlogn)   O(nlogn)    O(1)      内空间     不稳定
    计数排序    O(n+k)          O(n+k)     O(n+k)     O(k)       外空间     稳定
    桶排序     O(n+k)          O(n+k)      O(n^2)     O(n+k)     外空间    稳定
    基数排序    O(n*k)          O(n*k)     O(n*k)     O(n+k)     外空间     稳定

    稳定：如果a原本在b前面，而a=b，排序之后a仍然在b的前面；     不稳定：排序之后a可能会出现在b的后面；
    内排序：所有排序操作都在内存中完成；                      外排序：由于数据太大，因此把数据放在磁盘中，而排序通过磁盘和内存的数据传输才能进行；
    时间复杂度：一个算法执行所消耗的时间；                    空间复杂度：运行完一个程序所需内存的大小；
    n：数据规模；     k：“桶”的个数；    内空间：不占用额外内存；     外空间：占用额外内存；