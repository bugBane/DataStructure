稀疏数组
应用实例：编写的五子棋程序中，有存盘退出和续上盘的功能。

棋盘通过二维数组来实现
    ->当数据较少时会记录很多无意义值(默认值为0)
    例如：10行 10列 就只有 2行3列为白棋 3行5列为黑棋 只有这两个有效棋子
    如果我们使用常规二维数组进行存值可能消耗文件大小为 10*10=100 但是实际就只有2个棋子

分析问题：因为上述例子二维数组的很多值为默认值0，因此记录了很多没有意义的数据，我们可以将数组进行压缩->稀疏数组
二维数组：
    0   0   0   0   0   0   0   0   0   0
    0   0   1   0   0   0   0   0   0   0
    0   0   0   0   2   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0
稀疏数组：
        行  列   值
[0]     10  10  2
[1]     1   2   1
[2]     2   4   2
压缩完以后实际消耗为 3*3=9

代码实现：
    存盘：
        1.创建一个二维数组去完成棋子位置功能，如上假设2行3列为白棋、3行5列为黑棋（白棋为1，黑棋为2，默认值为0）
        2.将二位数组转换成稀疏数组：
            获取二维数组有效个数sum，创建稀疏数组int[][] sparseArray = new int[sum+1][3];
            稀疏数组第一行为 sparseArray[0][0]= 10,sparseArray[0][1]= 10,sparseArray[0][2]= sum;
            遍历二维数组，将二维数组中的有效值转换到稀疏数组。
        3.将稀疏数组输入文件保存。
    续盘：
        1.从文件中读取数据转化为稀疏数组。
        2.将稀疏数组转换为二维数组：
            用稀疏数组第一行数据创建二维数组 int[][] array = new int[sparseArray[0][0]][sparseArray[0][1]];
            遍历稀疏数组将有效值转换到二维数组。